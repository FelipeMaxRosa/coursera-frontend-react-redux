[{"D:\\FELIPE\\MEU ESTUDO\\TI\\Coursera\\Front-End Web Development with React\\dashes-menu\\src\\components\\MainComponent.js":"1","D:\\FELIPE\\MEU ESTUDO\\TI\\Coursera\\Front-End Web Development with React\\dashes-menu\\src\\components\\MenuComponent.js":"2","D:\\FELIPE\\MEU ESTUDO\\TI\\Coursera\\Front-End Web Development with React\\dashes-menu\\src\\components\\DishDetailsComponent.js":"3","D:\\FELIPE\\MEU ESTUDO\\TI\\Coursera\\Front-End Web Development with React\\dashes-menu\\src\\redux\\ActionTypes.js":"4","D:\\FELIPE\\MEU ESTUDO\\TI\\Coursera\\Front-End Web Development with React\\dashes-menu\\src\\redux\\ActionCreators.js":"5","D:\\FELIPE\\MEU ESTUDO\\TI\\Coursera\\Front-End Web Development with React\\dashes-menu\\src\\index.js":"6","D:\\FELIPE\\MEU ESTUDO\\TI\\Coursera\\Front-End Web Development with React\\dashes-menu\\src\\redux\\configureStore.js":"7","D:\\FELIPE\\MEU ESTUDO\\TI\\Coursera\\Front-End Web Development with React\\dashes-menu\\src\\components\\HeaderComponent.js":"8","D:\\FELIPE\\MEU ESTUDO\\TI\\Coursera\\Front-End Web Development with React\\dashes-menu\\src\\components\\FooterComponent.js":"9","D:\\FELIPE\\MEU ESTUDO\\TI\\Coursera\\Front-End Web Development with React\\dashes-menu\\src\\components\\HomeComponent.js":"10","D:\\FELIPE\\MEU ESTUDO\\TI\\Coursera\\Front-End Web Development with React\\dashes-menu\\src\\redux\\comments.js":"11","D:\\FELIPE\\MEU ESTUDO\\TI\\Coursera\\Front-End Web Development with React\\dashes-menu\\src\\shared\\dishes.js":"12","D:\\FELIPE\\MEU ESTUDO\\TI\\Coursera\\Front-End Web Development with React\\dashes-menu\\src\\redux\\leaders.js":"13"},{"size":3663,"mtime":1612619128204,"results":"14","hashOfConfig":"15"},{"size":1713,"mtime":1611840685530,"results":"16","hashOfConfig":"15"},{"size":6827,"mtime":1612536173304,"results":"17","hashOfConfig":"15"},{"size":466,"mtime":1611841970031,"results":"18","hashOfConfig":"15"},{"size":5218,"mtime":1612617534452,"results":"19","hashOfConfig":"15"},{"size":357,"mtime":1611749569159,"results":"20","hashOfConfig":"15"},{"size":735,"mtime":1611750584877,"results":"21","hashOfConfig":"15"},{"size":4486,"mtime":1611137799835,"results":"22","hashOfConfig":"15"},{"size":2662,"mtime":1610374613193,"results":"23","hashOfConfig":"15"},{"size":1715,"mtime":1612535217901,"results":"24","hashOfConfig":"15"},{"size":613,"mtime":1611849290181,"results":"25","hashOfConfig":"15"},{"size":1490,"mtime":1610383249012,"results":"26","hashOfConfig":"15"},{"size":170,"mtime":1612619157619,"results":"27","hashOfConfig":"15"},{"filePath":"28","messages":"29","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"beq5he",{"filePath":"30","messages":"31","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"32","messages":"33","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"34"},{"filePath":"35","messages":"36","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"37","messages":"38","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"39","messages":"40","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"41"},{"filePath":"42","messages":"43","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"41"},{"filePath":"44","messages":"45","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"46","messages":"47","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"48","messages":"49","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"50","messages":"51","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"52","messages":"53","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"54","messages":"55","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"D:\\FELIPE\\MEU ESTUDO\\TI\\Coursera\\Front-End Web Development with React\\dashes-menu\\src\\components\\MainComponent.js",["56"],"D:\\FELIPE\\MEU ESTUDO\\TI\\Coursera\\Front-End Web Development with React\\dashes-menu\\src\\components\\MenuComponent.js",[],"D:\\FELIPE\\MEU ESTUDO\\TI\\Coursera\\Front-End Web Development with React\\dashes-menu\\src\\components\\DishDetailsComponent.js",["57","58","59"],"import React, {Component} from 'react';\r\nimport {\r\n  Card, CardImg, CardText, CardBody, CardTitle, Breadcrumb, BreadcrumbItem,\r\n  Modal, ModalHeader, ModalBody,\r\n  Button, Label, Col, Row } from \"reactstrap\";\r\nimport { Link } from 'react-router-dom';\r\nimport { Control, LocalForm, Errors } from 'react-redux-form';\r\nimport { Loading } from \"./LoadingComponent\";\r\nimport { baseURL } from '../shared/baseUrl';\r\nimport { FadeTransform, Fade, Stagger } from \"react-animation-components\";\r\n\r\nfunction RenderDish({dish}) {\r\n  return (\r\n    <div className=\"col-12 col-md-5 m-1\">\r\n      <FadeTransform in transformProps={{\r\n        exitTransform: 'scale(0.5) translateY(-50%)'\r\n      }}>\r\n        <Card>\r\n          <CardImg top src={baseURL + dish.image} alt={dish.name} />\r\n\r\n          <CardBody>\r\n            <CardTitle style={{fontWeight: \"bold\"}}>{dish.name}</CardTitle>\r\n            <CardText>{dish.description}</CardText>\r\n          </CardBody>\r\n        </Card>        \r\n      </FadeTransform>\r\n    </div>\r\n  )\r\n}\r\n\r\nfunction RenderComments({ comments, dishId, postComment }) {\r\n  const allComments = comments.map((comment) => {\r\n    return (\r\n      <Fade in>\r\n        <li key={comment.id} >\r\n          <p>{comment.comment}</p>\r\n          <p>-- {comment.author},\r\n            {new Intl.DateTimeFormat('en-US', { year: 'numeric', month: 'long', day: '2-digit'}).format(new Date(Date.parse(comment.date)))}\r\n          </p>\r\n        </li>\r\n      </Fade>\r\n    )\r\n  });\r\n\r\n  if (comments == null) {\r\n    return (\r\n      <div></div>\r\n    )\r\n  } else { \r\n    return (\r\n      <div className=\"col-12 col-md-5 m-1\">\r\n        <h4> Comments </h4>\r\n        <ul className='list-unstyled'>\r\n          <Stagger in>\r\n            {allComments}\r\n          </Stagger>\r\n        </ul>\r\n        <CommentForm dishId={dishId} postComment={postComment}/>\r\n      </div>\r\n\r\n    )\r\n  }\r\n}\r\n\r\n// Verifica se o valor Ã© maior que zero\r\nconst required = (val) => val && val.length;  \r\n// Verifica o valor maximo\r\nconst maxLength = (len) => (val) => !(val) || (val.length <= len);\r\n// Verifica o valor minimo\r\nconst minLength = (len) => (val) => (val) && (val.length >= len);\r\n\r\nclass CommentForm extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n        isModalOpen: false\r\n      };  \r\n\r\n    this.toggleModal = this.toggleModal.bind(this);\r\n    this.handleSubmit = this.handleSubmit.bind(this);\r\n  }\r\n\r\n  toggleModal() {\r\n    this.setState({\r\n      isModalOpen: !this.state.isModalOpen\r\n    });\r\n  }\r\n\r\n  handleSubmit(values){\r\n    this.toggleModal();\r\n    // console.log(\"Current State is: \" + JSON.stringify(values));\r\n    // alert(\"Current State is: \" + JSON.stringify(values));\r\n    this.props.postComment(this.props.dishId, values.rating, values.author, values.comment);\r\n    // alert(JSON.stringify(values));\r\n  };\r\n  \r\n  render() {\r\n    return (\r\n      <>\r\n        <Button className=\"button-submit-comment\" outline onClick={this.toggleModal}>\r\n          <span className=\"fa fa-pencil\"></span>\r\n          <span>Submit Comment</span>\r\n        </Button>      \r\n\r\n        <Modal isOpen={this.state.isModalOpen} toggle={this.toggleModal}>\r\n          <ModalHeader toggle={this.toggleModal}>Submit Comment</ModalHeader>\r\n\r\n          <ModalBody>\r\n            <LocalForm onSubmit={(values) => this.handleSubmit(values)}>\r\n              <Col className=\"form-group\">\r\n                <Row>\r\n                  <Label htmlFor=\"rating\">Rating</Label>\r\n                </Row>\r\n                <Row>\r\n                  <Control.select model=\".rating\" name=\"rating\" \r\n                      className=\"form-control\">\r\n                      <option value=\"1\">1</option>\r\n                      <option value=\"2\">2</option>\r\n                      <option value=\"3\">3</option>\r\n                      <option value=\"4\">4</option>\r\n                      <option value=\"5\">5</option>\r\n                  </Control.select>\r\n                </Row>\r\n              </Col>\r\n              \r\n              <Col className=\"form-group\">\r\n                <Row>\r\n                  <Label htmlFor=\"author\">Your Name</Label>\r\n                </Row>\r\n                <Row>\r\n                  <Control.text model=\".author\" id=\"author\" name=\"author\" \r\n                      placeholder=\"Your Name\"\r\n                      className=\"form-control\"\r\n                      validators = {{\r\n                          required, minLength: minLength(3), maxLength: maxLength(15)\r\n                      }}\r\n                  />\r\n                  <Errors  \r\n                      className=\"text-danger\"\r\n                      model =\".yourname\"\r\n                      show=\"touched\"\r\n                      messages={{\r\n                          required: 'Required\\n',\r\n                          minLength: 'Must be greater than 2 characters\\n',\r\n                          maxLength: 'Must be 15 characters or less'\r\n                      }}\r\n                    />\r\n                </Row>\r\n              </Col>\r\n\r\n              <Col className=\"form-group\">\r\n                <Row>\r\n                  <Label htmlFor=\"comment\">Comment</Label>\r\n                </Row>\r\n                <Row>\r\n                    <Control.textarea model=\".comment\" id=\"comment\" name=\"comment\" \r\n                        rows=\"6\"\r\n                        className=\"form-control\"/>\r\n                </Row>\r\n              </Col>\r\n              \r\n              <Col className=\"form-group\">\r\n                <Row>\r\n                    <Button type=\"submit\" color=\"primary\">Submit</Button>\r\n                </Row>\r\n              </Col>\r\n            </LocalForm>\r\n          </ModalBody>\r\n        </Modal>\r\n      </>\r\n    )\r\n  }\r\n    \r\n}\r\n\r\nconst DishDetail = ({ dish, comments, postComment, isLoading, errMess }) => {\r\n  if (isLoading) {\r\n    return (\r\n      <div className=\"container\">\r\n        <div className=\"row\">\r\n          <Loading />\r\n        </div>\r\n      </div>\r\n    )\r\n  } else if (errMess) {\r\n    return (\r\n      <div className=\"container\">\r\n        <div className=\"row\">\r\n          <h4>{ errMess }</h4>\r\n        </div>\r\n      </div>\r\n    )    \r\n  }  else if (dish != null) {\r\n    return (\r\n      <div className=\"container\">\r\n        <div className=\"row\">\r\n          <Breadcrumb>\r\n            <BreadcrumbItem><Link to=\"/menu\">Menu</Link></BreadcrumbItem>\r\n            <BreadcrumbItem active>{dish.name}</BreadcrumbItem>\r\n          </Breadcrumb>\r\n\r\n          <div className=\"col-12\">\r\n            <h3>{dish.name}</h3>\r\n            <hr />\r\n          </div>\r\n        </div>\r\n        \r\n        <div className=\"row\">\r\n          <RenderDish dish={dish}/>\r\n          <RenderComments comments={comments}\r\n            postComment={postComment}\r\n            dishId={dish.id}\r\n          />\r\n        </div>\r\n      </div>\r\n    )\r\n  } else {\r\n    <div></div>\r\n  }\r\n}\r\n  \r\nexport default DishDetail;\r\n","D:\\FELIPE\\MEU ESTUDO\\TI\\Coursera\\Front-End Web Development with React\\dashes-menu\\src\\redux\\ActionTypes.js",[],"D:\\FELIPE\\MEU ESTUDO\\TI\\Coursera\\Front-End Web Development with React\\dashes-menu\\src\\redux\\ActionCreators.js",["60"],"D:\\FELIPE\\MEU ESTUDO\\TI\\Coursera\\Front-End Web Development with React\\dashes-menu\\src\\index.js",[],["61","62"],"D:\\FELIPE\\MEU ESTUDO\\TI\\Coursera\\Front-End Web Development with React\\dashes-menu\\src\\redux\\configureStore.js",[],"D:\\FELIPE\\MEU ESTUDO\\TI\\Coursera\\Front-End Web Development with React\\dashes-menu\\src\\components\\HeaderComponent.js",[],"D:\\FELIPE\\MEU ESTUDO\\TI\\Coursera\\Front-End Web Development with React\\dashes-menu\\src\\components\\FooterComponent.js",[],"D:\\FELIPE\\MEU ESTUDO\\TI\\Coursera\\Front-End Web Development with React\\dashes-menu\\src\\components\\HomeComponent.js",[],"D:\\FELIPE\\MEU ESTUDO\\TI\\Coursera\\Front-End Web Development with React\\dashes-menu\\src\\redux\\comments.js",[],"D:\\FELIPE\\MEU ESTUDO\\TI\\Coursera\\Front-End Web Development with React\\dashes-menu\\src\\shared\\dishes.js",[],"D:\\FELIPE\\MEU ESTUDO\\TI\\Coursera\\Front-End Web Development with React\\dashes-menu\\src\\redux\\leaders.js",[],{"ruleId":"63","severity":1,"message":"64","line":11,"column":64,"nodeType":"65","messageId":"66","endLine":11,"endColumn":76},{"ruleId":"67","severity":1,"message":"68","line":115,"column":19,"nodeType":"69","endLine":116,"endColumn":48},{"ruleId":"67","severity":1,"message":"70","line":131,"column":19,"nodeType":"69","endLine":137,"endColumn":21},{"ruleId":"67","severity":1,"message":"71","line":156,"column":21,"nodeType":"69","endLine":158,"endColumn":51},{"ruleId":"63","severity":1,"message":"72","line":2,"column":10,"nodeType":"65","messageId":"66","endLine":2,"endColumn":16},{"ruleId":"73","replacedBy":"74"},{"ruleId":"75","replacedBy":"76"},"no-unused-vars","'fetchLeaders' is defined but never used.","Identifier","unusedVar","react/jsx-pascal-case","Imported JSX component select must be in PascalCase or SCREAMING_SNAKE_CASE","JSXOpeningElement","Imported JSX component text must be in PascalCase or SCREAMING_SNAKE_CASE","Imported JSX component textarea must be in PascalCase or SCREAMING_SNAKE_CASE","'DISHES' is defined but never used.","no-native-reassign",["77"],"no-negated-in-lhs",["78"],"no-global-assign","no-unsafe-negation"]